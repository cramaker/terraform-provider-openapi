builds:
  - main: main.go
    binary: terraform-provider-openapi_v{{ .Version }}
    goos:
      - darwin
      - linux
      - windows
    goarch:
      - amd64
    env:
    - CGO_ENABLED=0
    flags:
    - -a
    - -tags="netgo"
    ldflags:
    - -s -w -extldflags "-static" -X "github.com/dikhan/terraform-provider-openapi/v2/openapi/version.Version={{.Version}}" -X "github.com/dikhan/terraform-provider-openapi/v2/openapi/version.Commit={{.Commit}}" -X "github.com/dikhan/terraform-provider-openapi/v2/openapi/version.Date={{.Date}}"

release:
  name_template: "v{{.Version}}"
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: false
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'

checksum:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

archives:
  - id: terraform-provider-openapi-archives
    name_template: "{{.ProjectName}}_{{.Version}}_{{.Os}}_{{.Arch}}"
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE